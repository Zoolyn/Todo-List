{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jerry\\\\Documents\\\\Code\\\\react-todo\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Todos from './components/Todos';\nimport AddTodos from './components/AddTodo';\nimport About from './components/pages/About';\nimport uuid from 'uuid';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //these are the items in the todo list\n      //id is the unique id\n      //title is the title of the task\n      //complete is the value if the task was completed\n      todos: []\n    };\n\n    this.markComplete = id => {\n      //we want to set the object in the todos array that matches the id that was passed from TodoItem.js\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            //this will set the todo complete to the oppisite\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.delTodo = id => {\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      });\n    };\n\n    this.AddTodos = title => {\n      /*const newTodo = {\n        id: uuid.v4(),\n        title,\n        completed: false\n      }\n      we don't have to use this anymore because we can just use axios.post\n      */\n      axios.post('https://jsonplaceholder.typicode.com/todos', {\n        title,\n        completed: false\n      }).then(res => this.setState({\n        todos: [...this.state.todos, res.data]\n      }));\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10').then(res => this.setState({\n      todos: res.data\n    }));\n  }\n\n  render() {\n    console.log(this.state.todos);\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(AddTodos, {\n        addTodo: this.AddTodos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(Todos, {\n        todos: this.state.todos,\n        markComplete: this.markComplete,\n        delTodo: this.delTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\jerry\\Documents\\Code\\react-todo\\src\\App.js"],"names":["React","Component","BrowserRouter","Router","Route","Header","Todos","AddTodos","About","uuid","axios","App","state","todos","markComplete","id","setState","map","todo","completed","delTodo","filter","title","post","then","res","data","componentDidMount","get","render","console","log","props"],"mappings":"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","sourcesContent":["import React, {Component}from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Todos from './components/Todos';\nimport AddTodos from './components/AddTodo';\nimport About from './components/pages/About';\nimport uuid from 'uuid';\nimport axios from 'axios';\n\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n      //these are the items in the todo list\n      //id is the unique id\n      //title is the title of the task\n      //complete is the value if the task was completed\n    todos: []\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10').then(res => this.setState({todos: res.data}))\n  }\n\n  markComplete = (id) => {\n    //we want to set the object in the todos array that matches the id that was passed from TodoItem.js\n    this.setState({todos: this.state.todos.map(todo => {\n      if(todo.id === id){\n        //this will set the todo complete to the oppisite\n        todo.completed = !todo.completed\n      }\n      return todo;\n    }) });\n  }\n  //delTodo\n  delTodo = (id) =>{\n    this.setState({todos:[...this.state.todos.filter(todo => todo.id !== id)]});\n  }\n\n  AddTodos = (title) => {\n    /*const newTodo = {\n      id: uuid.v4(),\n      title,\n      completed: false\n    }\n    we don't have to use this anymore because we can just use axios.post\n    */\n    axios.post('https://jsonplaceholder.typicode.com/todos',{\n      title,\n      completed: false\n    })\n      .then(res => this.setState({todos: [...this.state.todos, res.data]}));    \n  }\n\n  render(){\n    console.log(this.state.todos)\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route exact path=\"/\" render={props => (\n              <React.Fragment>\n                <AddTodos addTodo={this.AddTodos} />\n                <Todos todos={this.state.todos} markComplete={this.markComplete} delTodo={this.delTodo}/>              \n              </React.Fragment>\n            )} />\n            <Route path=\"/about\" component = {About}/>\n          </div>   \n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
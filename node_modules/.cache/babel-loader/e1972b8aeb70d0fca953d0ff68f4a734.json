{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jerry\\\\Documents\\\\Code\\\\react-todo\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Todos from './components/Todos';\nimport AddTodos from './components/AddTodo';\nimport About from './components/pages/About';\nimport uuid from 'uuid';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [//these are the items in the todo list\n      //id is the unique id\n      //title is the title of the task\n      //complete is the value if the task was completed\n      {\n        id: uuid.v4(),\n        title: 'Take out the trash',\n        complete: false\n      }, {\n        id: uuid.v4(),\n        title: 'Make dinner',\n        complete: true\n      }, {\n        id: uuid.v4(),\n        title: 'Do the dishes',\n        complete: false\n      }]\n    };\n\n    this.markComplete = id => {\n      //we want to set the object in the todos array that matches the id that was passed from TodoItem.js\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            //this will set the todo complete to the oppisite\n            todo.complete = !todo.complete;\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.delTodo = id => {\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      });\n    };\n\n    this.AddTodos = title => {\n      const newTodo = {\n        id: uuid.v4(),\n        title,\n        complete: false\n      };\n      this.setState({\n        todos: [...this.state.todos, newTodo]\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state.todos);\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(AddTodos, {\n        addTodo: this.AddTodos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(Todos, {\n        todos: this.state.todos,\n        markComplete: this.markComplete,\n        delTodo: this.delTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\jerry\\Documents\\Code\\react-todo\\src\\App.js"],"names":["React","Component","BrowserRouter","Router","Route","Header","Todos","AddTodos","About","uuid","App","state","todos","id","v4","title","complete","markComplete","setState","map","todo","delTodo","filter","newTodo","render","console","log","props"],"mappings":"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","sourcesContent":["import React, {Component}from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Todos from './components/Todos';\nimport AddTodos from './components/AddTodo';\nimport About from './components/pages/About';\nimport uuid from 'uuid';\n\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    todos: [\n      //these are the items in the todo list\n      //id is the unique id\n      //title is the title of the task\n      //complete is the value if the task was completed\n      {\n        id: uuid.v4(),\n        title: 'Take out the trash',\n        complete: false\n      },\n      {\n        id: uuid.v4(),\n        title: 'Make dinner',\n        complete: true\n      },\n      {\n        id: uuid.v4(),\n        title: 'Do the dishes',\n        complete: false\n      }\n    ]\n  }\n\n  markComplete = (id) => {\n    //we want to set the object in the todos array that matches the id that was passed from TodoItem.js\n    this.setState({todos: this.state.todos.map(todo => {\n      if(todo.id === id){\n        //this will set the todo complete to the oppisite\n        todo.complete = !todo.complete\n      }\n      return todo;\n    }) });\n  }\n  //delTodo\n  delTodo = (id) =>{\n    this.setState({todos:[...this.state.todos.filter(todo => todo.id !== id)]});\n  }\n\n  AddTodos = (title) => {\n    const newTodo = {\n      id: uuid.v4(),\n      title,\n      complete: false\n    }\n    this.setState({todos: [...this.state.todos, newTodo]});\n  }\n\n  render(){\n    console.log(this.state.todos)\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route exact path=\"/\" render={props => (\n              <React.Fragment>\n                <AddTodos addTodo={this.AddTodos} />\n                <Todos todos={this.state.todos} markComplete={this.markComplete} delTodo={this.delTodo}/>              \n              </React.Fragment>\n            )} />\n            <Route path=\"/about\" component = {About}/>\n          </div>   \n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}